openapi: 3.0.0
info:
  version: 1.0.0
  title: evm-airdrop-svc
  description: ''
servers:
  - url: 'https://api.stage.rarime.com'
    description: TokenD Developer Environment
paths:
  /airdrops:
    post:
      tags:
        - Airdrop
      summary: Create airdrop
      description: Create an airdrop for unique user. The proof will be verified.
      operationId: createAirdrop
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/CreateAirdrop'
      responses:
        '201':
          description: 'Airdrop was created, transaction was queued'
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Airdrop'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '409':
          description: Airdrop was already done
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          $ref: '#/components/responses/internalError'
  '/airdrops/{nullifier}':
    get:
      tags:
        - Airdrop
      summary: Get an airdrop
      description: Get an airdrop for unique user.
      operationId: getAirdrop
      parameters:
        - in: path
          name: nullifier
          description: User nullifier
          required: true
          schema:
            type: string
            example: '48274927346589028382136333339484890005759403737728382873187445992373311929001'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Airdrop'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          description: Airdrop was already done
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          $ref: '#/components/responses/internalError'
  /airdrops/params:
    get:
      tags:
        - Airdrop
      summary: Get airdrop event parameters
      description: Get an airdrop parameters for integration.
      operationId: GetAirdropParams
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/AirdropParams'
  /token/balance:
    get:
      tags:
        - Tokens
      summary: Get Balance
      description: Get token's balance by the given user address
      operationId: GetBalance
      parameters:
        - in: query
          name: address
          required: true
          schema:
            type: string
            format: common.Address
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Balance'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '500':
          $ref: '#/components/responses/internalError'
  /token/details:
    get:
      tags:
        - Tokens
      summary: Get details
      description: Get service token's details
      operationId: GetDetails
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/TokenDetails'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '500':
          $ref: '#/components/responses/internalError'
  /transfer:
    post:
      tags:
        - Transfer
      summary: Send ERC20 transfer
      description: |
        Creates and sends multicall transaction with transfer. Service takes signature from requester creates transaction and sends it in the network. This call consists of:
         - Permit - allows service sender to transfer from requester account 
         - Transfer #1 - sends tokens to the desired address
         - Transfer #2 - sends part from tokens to the sender address to cover fees expenses. Transaction is created, but  not awaited.
      operationId: SendTransfer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/TransferERC20Token'
      responses:
        '201':
          description: 'Transfer was created, transaction was sent'
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Tx'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '500':
          $ref: '#/components/responses/internalError'
    get:
      tags:
        - Transfer
      summary: Get transfer params
      description: 'Returns ERC20 transfer with multicall parameters. Takes all requried parameters for permit and transfer,  simulates transaction and returns the calculated values'
      operationId: GetTransferParams
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/TransferERC20Token'
      responses:
        '200':
          description: 'Transaction was done successfully, all parameters were calculated.'
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Estimate'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '500':
          $ref: '#/components/responses/internalError'
  /transfer/permit-hash:
    post:
      tags:
        - Transfer
      summary: Build Permit hash
      description: 'Endpoint that build message hash for permit transfer, that has to be signer by token owner to permit transfer. This message is built according to the ERC-2612 standard.'
      operationId: SendTransfer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/BuildPermitHash'
      responses:
        '200':
          description: Created permit hash
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/PermitHash'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '500':
          $ref: '#/components/responses/internalError'
    get:
      tags:
        - Transfer
      summary: Get transfer params
      description: 'Returns ERC20 transfer with multicall parameters. Takes all requried parameters for permit and transfer,  simulates transaction and returns the calculated values'
      operationId: GetTransferParams
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/TransferERC20Token'
      responses:
        '200':
          description: 'Transaction was done successfully, all parameters were calculated.'
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Estimate'
        '400':
          $ref: '#/components/responses/invalidParameter'
        '500':
          $ref: '#/components/responses/internalError'
components:
  schemas:
    Airdrop:
      allOf:
        - $ref: '#/components/schemas/AirdropKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - address
                - nullifier
                - status
                - amount
                - created_at
                - updated_at
              properties:
                address:
                  type: string
                  description: Destination address for the airdrop
                  example: rarimo1qlyq3ej7j7rrkw6sluz658pzne88ymf66vjcap
                nullifier:
                  type: string
                  description: User nullifier
                  example: '48274927346589028382136333339484890005759403737728382873187445992373311929001'
                status:
                  type: string
                  description: Status of the airdrop transaction
                  enum:
                    - pending
                    - completed
                created_at:
                  type: string
                  format: time.Time
                  description: RFC3339 UTC timestamp of the airdrop creation
                  example: '2021-09-01T00:00:00Z'
                updated_at:
                  type: string
                  format: time.Time
                  description: RFC3339 UTC timestamp of the airdrop successful tx
                  example: '2021-09-01T00:00:00Z'
                amount:
                  type: string
                  description: Amount of airdropped coins
                  example: 100stake
                tx_hash:
                  type: string
                  description: Hash of the airdrop transaction
                  example: F1CC0E80E151A67F75E41F2CDBF07920C29C9A3CDB6131B2A23A7C9D1964AD0B
    AirdropKey:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: Airdrop UUID
          example: 4bf0b086-decf-4ffb-8d30-7c28665adef9
        type:
          type: string
          enum:
            - airdrop
    AirdropParams:
      allOf:
        - $ref: '#/components/schemas/AirdropKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - event_id
                - query_selector
                - started_at
              properties:
                event_id:
                  type: string
                  description: Event identifier that is generated during ZKP query creation
                  example: '304351862882731539112827930982999985591702317710421481944329166111111129570'
                started_at:
                  type: integer
                  format: int64
                  description: Unix timestamp in seconds when airdrop event starts
                  example: 1716381206
                query_selector:
                  type: string
                  description: Query selector that is used for proof generation
                  example: 123
    Balance:
      allOf:
        - $ref: '#/components/schemas/TokenKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: integer
                  format: '*big.Int'
                  description: Amount of the tokens on the user address
                  example: '123'
    BuildPermitHash:
      allOf:
        - $ref: '#/components/schemas/TransferKey'
        - type: object
          x-go-is-request: true
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - sender
                - amount
                - deadline
              properties:
                sender:
                  type: string
                  format: common.Address
                  description: EVM address FROM which tokens are transferred.
                  example: '0x9E65b5Fac5aD50B7daf51a0F8D8234Cd5658ef17'
                amount:
                  type: integer
                  format: '*big.Int'
                  description: Transferred amount of tokens.
                  example: 8
                deadline:
                  type: integer
                  format: '*big.Int'
                  description: UNIX UTC timestamp in the future till which permit signature may be used.
                  example: 1717015161
    CreateAirdrop:
      allOf:
        - $ref: '#/components/schemas/CreateAirdropKey'
        - type: object
          x-go-is-request: true
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - address
                - zk_proof
              properties:
                address:
                  type: string
                  description: Destination address for the airdrop
                  example: rarimo1qlyq3ej7j7rrkw6sluz658pzne88ymf66vjcap
                zk_proof:
                  type: string
                  format: types.ZKProof
                  description: ZK-proof of the passport data
                  example: '{}'
    CreateAirdropKey:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - create_airdrop
    Errors:
      description: 'Standard JSON:API error'
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: Non empty array of errors occurred during request processing
          items:
            type: object
            required:
              - title
              - status
            properties:
              title:
                type: string
                description: 'Title is a short, human-readable summary of the problem'
                example: Bad Request
              detail:
                type: string
                description: Detail is a human-readable explanation specific to this occurrence of the problem
                example: Request body was expected
              status:
                type: integer
                description: Status is the HTTP status code applicable to this problem
                example: 400
                enum:
                  - 400
                  - 401
                  - 403
                  - 404
                  - 409
                  - 500
    Estimate:
      allOf:
        - $ref: '#/components/schemas/TransferKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - amount
                - fee
              properties:
                amount:
                  type: integer
                  format: int64
                  description: Amount of tokens that will be transferred to the destination.
                  example: 6
                fee:
                  type: integer
                  format: int64
                  description: Amount of tokens that will be drawn ass fee expenses.
                  example: 2
    PermitHash:
      allOf:
        - $ref: '#/components/schemas/TransferKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                  description: Permit message hash built by ERC-2612 standard that has to be signed by token owner.
                  example: '0x3f77218a74501051ac9f069e73523519e6a6cf34783811515da5a178e86634ca'
    TokenDetails:
      allOf:
        - $ref: '#/components/schemas/TokenKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - name
                - symbol
                - decimals
                - image
              properties:
                name:
                  type: string
                  description: ERC20 token name
                  example: USD Dollar
                symbol:
                  type: string
                  description: ERC20 token symbol
                  example: USDD
                decimals:
                  type: integer
                  format: uint8
                  description: ERC20 token decimals
                  example: 12
                image:
                  type: string
                  description: ERC20 token symbol image
                  example: 'https://image_link/usdd.png'
    TokenKey:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - token
    TransferERC20Token:
      allOf:
        - $ref: '#/components/schemas/TransferKey'
        - type: object
          x-go-is-request: true
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - sender
                - receiver
                - amount
                - deadline
                - r
                - v
                - s
              properties:
                sender:
                  type: string
                  format: common.Address
                  description: EVM address FROM which tokens are transferred.
                  example: '0x9E65b5Fac5aD50B7daf51a0F8D8234Cd5658ef17'
                receiver:
                  type: string
                  format: common.Address
                  description: EVM address TO which tokens are transferred.
                  example: '0xBF8080a3FE79bf5e13F28BB743AEC11442365dB0'
                amount:
                  type: integer
                  format: '*big.Int'
                  description: Transferred amount of tokens.
                  example: 8
                deadline:
                  type: integer
                  format: '*big.Int'
                  description: UNIX UTC timestamp in the future till which permit signature may be used.
                  example: 1717015161
                r:
                  type: string
                  description: Hex encoded permit the x coordinate of R value of the signature.
                  example: '0xaec2aac837bbe808ab9b2b994e6c0bf93ce751d0cef7f4c882f9c0125eb0809c'
                s:
                  type: string
                  description: Hex encoded permit the x coordinate of S value of the signature.
                  example: '0x5548ffb8ba6a610ec2f02d75a8ec80c428ed2e07a9bdfd5716af24adb4c2c58f'
                v:
                  type: integer
                  format: uint8
                  description: The parity of the y coordinate of R.
                  example: 28
    TransferKey:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - transfer_erc20
    Tx:
      allOf:
        - $ref: '#/components/schemas/TransferKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - hash
                - amount
                - fee
              properties:
                hash:
                  type: string
                  description: Transfer transaction hash.
                  example: '0x1b06e10120aab3caee20ca69498de8a52eb977b39fa9811dea9592ea3b3d2985'
                amount:
                  type: integer
                  format: int64
                  description: Amount of tokens that was transferred to the destination.
                  example: 6
                fee:
                  type: integer
                  format: int64
                  description: Amount of tokens that was drawn ass fee expenses.
                  example: 2
  responses:
    internalError:
      description: Internal server error
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
    invalidParameter:
      description: One of the parameters is invalid. Refer to the response body for details.
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
    notFound:
      description: Requested resource does not exist.
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
